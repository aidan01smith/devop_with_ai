---
# Theme 01: Basic System Security Configuration
# This playbook configures basic security settings across Windows and Linux environments
# including account policies, audit logging, and service management

- name: Windows Basic Security Configuration
  hosts: windows
  gather_facts: yes
  tasks:
    # System Administration - Windows Update Configuration
    - name: Configure Windows Update Settings
      win_regedit:
        path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU
        name: "{{ item.name }}"
        data: "{{ item.data }}"
        type: "{{ item.type }}"
      loop:
        - { name: NoAutoUpdate, data: 0, type: dword }  # Enable Windows Update
        - { name: AUOptions, data: 3, type: dword }     # Auto download, notify for install
        - { name: ScheduledInstallDay, data: 0, type: dword }  # Every day
        - { name: ScheduledInstallTime, data: 3, type: dword } # 3 AM
      tags:
        - windows_updates
        - system_admin

    # System Administration - Service Management
    - name: Manage Critical Windows Services
      win_service:
        name: "{{ item.name }}"
        start_mode: "{{ item.start_mode }}"
        state: "{{ item.state }}"
      loop:
        - { name: WinRM, start_mode: auto, state: started }
        - { name: wuauserv, start_mode: auto, state: started }  # Windows Update
        - { name: wscsvc, start_mode: auto, state: started }    # Security Center
        - { name: Browser, start_mode: disabled, state: stopped } # Computer Browser service (unnecessary)
      register: service_result
      tags:
        - services
        - system_admin

    - name: Display Service Configuration Results
      debug:
        msg: "Service {{ item.name }} is now {{ item.state }}"
      loop: "{{ service_result.results }}"
      when: service_result is defined
      tags:
        - services
        - debug

    # System Hardening - Windows Firewall Basic Configuration
    - name: Configure Windows Firewall Profiles
      win_firewall:
        state: enabled
        profiles:
          - Domain
          - Private
          - Public
      tags:
        - firewall
        - hardening

    - name: Create Basic Firewall Rules
      win_firewall_rule:
        name: "{{ item.name }}"
        localport: "{{ item.port }}"
        action: allow
        direction: in
        protocol: tcp
        state: present
        enabled: yes
      loop:
        - { name: "Allow RDP", port: "3389" }
        - { name: "Allow WinRM", port: "5985-5986" }
      tags:
        - firewall
        - hardening

    # System Hardening - Disable SMBv1
    - name: Disable SMBv1 Protocol
      win_regedit:
        path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters
        name: SMB1
        data: 0
        type: dword
      tags:
        - smb
        - hardening

    # AD DS GPO Hardening via Registry (no GPMC)
    - name: Account Lockout Policy (Domain Controllers)
      win_regedit:
        path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
        name: "{{ item.name }}"
        data: "{{ item.data }}"
        type: "{{ item.type }}"
      loop:
        - { name: MaximumPasswordAge, data: 42, type: dword }         # 42 days max password age
        - { name: MinimumPasswordAge, data: 1, type: dword }          # 1 day minimum before change
        - { name: MinimumPasswordLength, data: 12, type: dword }      # 12 character minimum
        - { name: PasswordHistorySize, data: 24, type: dword }        # Remember 24 passwords
      when: inventory_hostname == "AD01"
      tags:
        - gpo
        - account_policy

    - name: Configure User Account Control Settings
      win_regedit:
        path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
        name: "{{ item.name }}"
        data: "{{ item.data }}"
        type: "{{ item.type }}"
      loop:
        - { name: EnableLUA, data: 1, type: dword }                  # Enable UAC
        - { name: ConsentPromptBehaviorAdmin, data: 2, type: dword } # Prompt for consent on secure desktop
        - { name: ConsentPromptBehaviorUser, data: 0, type: dword }  # Deny elevation requests for standard users
      tags:
        - gpo
        - uac_settings

    - name: Configure Audit Policy Settings
      win_shell: |
        auditpol /set /subcategory:"Logon" /success:enable /failure:enable
        auditpol /set /subcategory:"Logoff" /success:enable /failure:enable
        auditpol /set /subcategory:"Account Lockout" /success:enable /failure:enable
      tags:
        - gpo
        - audit_policy

- name: Rocky Linux Basic Security Configuration
  hosts: rocky
  become: yes
  gather_facts: yes
  tasks:
    # System Administration - Configure Automatic Updates
    - name: Install DNF automatic updates package
      dnf:
        name: dnf-automatic
        state: present
      tags:
        - updates
        - system_admin

    - name: Configure automatic updates
      lineinfile:
        path: /etc/dnf/automatic.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^apply_updates =', line: 'apply_updates = yes' }
        - { regexp: '^emit_via =', line: 'emit_via = email' }
        - { regexp: '^email_from =', line: 'email_from = root@localhost' }
      tags:
        - updates
        - system_admin

    - name: Enable and start DNF automatic timer
      systemd:
        name: dnf-automatic.timer
        enabled: yes
        state: started
      register: dnf_service
      tags:
        - updates
        - system_admin

    - name: Display DNF Service Status
      debug:
        var: dnf_service
      when: dnf_service is defined
      tags:
        - updates
        - debug

    # System Administration - Manage Critical Services
    - name: Ensure critical services are running
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - sshd
        - chronyd  # Time synchronization
      tags:
        - services
        - system_admin

    # System Hardening - SSH Security Configuration
    - name: Configure SSH Security Settings
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      loop:
        - { regexp: '^PermitRootLogin', line: 'PermitRootLogin no' }
        - { regexp: '^PasswordAuthentication', line: 'PasswordAuthentication no' }  # Use key-based authentication instead
        - { regexp: '^X11Forwarding', line: 'X11Forwarding no' }
        - { regexp: '^MaxAuthTries', line: 'MaxAuthTries 3' }
        - { regexp: '^Protocol', line: 'Protocol 2' }
      notify: Restart SSH
      tags:
        - ssh
        - hardening

    # System Hardening - Basic Firewalld Configuration
    - name: Install firewalld if not present
      dnf:
        name: firewalld
        state: present
      tags:
        - firewall
        - hardening

    - name: Ensure firewalld is running and enabled
      systemd:
        name: firewalld
        state: started
        enabled: yes
      tags:
        - firewall
        - hardening

    - name: Configure firewalld basic rules
      firewalld:
        service: "{{ item }}"
        permanent: yes
        state: enabled
      loop:
        - ssh
        - http  # Only enable services you actually need
      notify: Reload firewalld
      tags:
        - firewall
        - hardening

  handlers:
    - name: Restart SSH
      systemd:
        name: sshd
        state: restarted
      listen: Restart SSH

    - name: Reload firewalld
      command: firewall-cmd --reload
      listen: Reload firewalld
